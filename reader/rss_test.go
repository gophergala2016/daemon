package reader

import "testing"

var feeds []string = []string{
	// Reuter
	"http://feeds.reuters.com/news/artsculture?format=xml",
	"http://feeds.reuters.com/reuters/businessnews?format=xml",
	"http://feeds.reuters.com/reuters/companynews?format=xml",
	"http://feeds.reuters.com/reuters/entertainment?format=xml",
	"http://feeds.reuters.com/reuters/healthnews?format=xml",
	"http://feeds.reuters.com/reuters/lifestyle?format=xml",
	"http://feeds.reuters.com/news/reutersmedia?format=xml",
	"http://feeds.reuters.com/news/wealth?format=xml",
	"http://feeds.reuters.com/reuters/mostread?format=xml",
	"http://feeds.reuters.com/reuters/oddlyenoughnews?format=xml",
	"http://feeds.reuters.com/reuterspictures?format=xml",
	"http://feeds.reuters.com/reuters/peoplenews?format=xml",
	"http://feeds.reuters.com/reuters/politicsnews?format=xml",
	"http://feeds.reuters.com/reuters/sciencenews?format=xml",
	"http://feeds.reuters.com/reuters/sportsnews?format=xml",
	"http://feeds.reuters.com/reuters/technologynews?format=xml",
	"http://feeds.reuters.com/reuters/topnews?format=xml",
	"http://feeds.reuters.com/reuters/domesticnews?format=xml",
	"http://feeds.reuters.com/reuters/worldnews?format=xml",
	"http://feeds.reuters.com/reuters/basicmaterialsnews?format=xml",
	"http://feeds.reuters.com/reuters/cyclicalconsumergoodsnews?format=xml",
	"http://feeds.reuters.com/reuters/usenergynews?format=xml",
	"http://feeds.reuters.com/reuters/environment?format=xml",
	"http://feeds.reuters.com/reuters/financialsnews?format=xml",
	"http://feeds.reuters.com/reuters/ushealthcarenews?format=xml",
	"http://feeds.reuters.com/reuters/industrialsnews?format=xml",
	"http://feeds.reuters.com/reuters/usmediadiversifiednews?format=xml",
	"http://feeds.reuters.com/reuters/noncyclicalconsumergoodsnews?format=xml",
	"http://feeds.reuters.com/reuters/technologysectornews?format=xml",
	"http://feeds.reuters.com/reuters/utilitiesnews?format=xml",
	//"http://feeds.reuters.com/reuters/blogs/data-drive?format=xml",
	"http://feeds.reuters.com/reuters/blogs/davosnotebook?format=xml",
	"http://feeds.reuters.com/reuters/blogs/financialregulatoryforum?format=xml",
	"http://feeds.reuters.com/reuters/blogs/globalinvesting?format=xml",
	"http://feeds.reuters.com/reuters/blogs/hugodixon?format=xml",
	"http://feeds.reuters.com/reuters/blogs/india?format=xml",
	"http://feeds.reuters.com/reuters/blogs/jamessaft?format=xml",
	"http://feeds.reuters.com/reuters/blogs/macroscope?format=xml",
	"http://feeds.reuters.com/reuters/blogs/mediafile?format=xml",
	//"http://feeds.reuters.com/reuters/blogs/newsmaker?format=xml",
	"http://feeds.reuters.com/reuters/blogs/photo?format=xml",
	"http://feeds.reuters.com/reuters/blogs/summitnotebook?format=xml",
	"http://feeds.reuters.com/reuters/blogs/talesfromthetrail?format=xml",
	"http://feeds.reuters.com/reuters/blogs/the-great-debate?format=xml",
	//"http://feeds.reuters.com/reuters/blogs/the-human-project?format=xml",
	"http://feeds.reuters.com/unstructuredfinance?format=xml",

	// NPR
	"http://www.npr.org/rss/rss.php?id=1001",
	"http://www.npr.org/rss/rss.php?id=100",
	"http://www.npr.org/rss/rss.php?id=1008",
	"http://www.npr.org/rss/rss.php?id=1006",
	"http://www.npr.org/rss/rss.php?id=1007",
	"http://www.npr.org/rss/rss.php?id=1057",
	"http://www.npr.org/rss/rss.php?id=1021",
	"http://www.npr.org/rss/rss.php?id=1012",
	"http://www.npr.org/rss/rss.php?id=1003",
	"http://www.npr.org/rss/rss.php?id=1004",
	"http://www.npr.org/rss/rss.php?id=2",
	"http://www.npr.org/rss/rss.php?id=37",
	"http://www.npr.org/rss/rss.php?id=3",
	"http://www.npr.org/rss/rss.php?id=5",
	"http://www.npr.org/rss/rss.php?id=13",
	"http://www.npr.org/rss/rss.php?id=46",
	"http://www.npr.org/rss/rss.php?id=7",
	"http://www.npr.org/rss/rss.php?id=10",
	"http://www.npr.org/rss/rss.php?id=216835831",
	"http://www.npr.org/rss/rss.php?id=43",
	"http://www.npr.org/rss/rss.php?id=1033",
	"http://www.npr.org/rss/rss.php?id=1032",
	"http://www.npr.org/rss/rss.php?id=1030",
	"http://www.npr.org/rss/rss.php?id=1013",
	"http://www.npr.org/rss/rss.php?id=1017",
	"http://www.npr.org/rss/rss.php?id=1025",
	"http://www.npr.org/rss/rss.php?id=1053",
	"http://www.npr.org/rss/rss.php?id=1052",
	"http://www.npr.org/rss/rss.php?id=1027",
	"http://www.npr.org/rss/rss.php?id=1022",
	"http://www.npr.org/rss/rss.php?id=1010",
	"http://www.npr.org/rss/rss.php?id=1070",
	"http://www.npr.org/rss/rss.php?id=1020",
	"http://www.npr.org/rss/rss.php?id=1009",
	"http://www.npr.org/rss/rss.php?id=1045",
	"http://www.npr.org/rss/rss.php?id=1039",
	"http://www.npr.org/rss/rss.php?id=1046",
	"http://www.npr.org/rss/rss.php?id=1018",
	"http://www.npr.org/rss/rss.php?id=1014",
	"http://www.npr.org/rss/rss.php?id=1048",
	"http://www.npr.org/rss/rss.php?id=1015",
	"http://www.npr.org/rss/rss.php?id=1016",
	"http://www.npr.org/rss/rss.php?id=1024",
	"http://www.npr.org/rss/rss.php?id=1026",
	"http://www.npr.org/rss/rss.php?id=1055",
	"http://www.npr.org/rss/rss.php?id=1019",
	"http://www.npr.org/rss/rss.php?id=1047",
	"http://www.npr.org/rss/rss.php?id=1049",

	// CNN
	"http://rss.cnn.com/rss/cnn_topstories.rss",
	"http://rss.cnn.com/rss/cnn_world.rss",
	"http://rss.cnn.com/rss/cnn_us.rss",
	//"http://rss.cnn.com/rss/money_latest.rss",
	"http://rss.cnn.com/rss/cnn_allpolitics.rss",
	"http://rss.cnn.com/rss/cnn_tech.rss",
	"http://rss.cnn.com/rss/cnn_health.rss",
	"http://rss.cnn.com/rss/cnn_showbiz.rss",
	"http://rss.cnn.com/rss/cnn_travel.rss",
	"http://rss.cnn.com/rss/cnn_living.rss",
	//"http://rss.cnn.com/rss/cnn_freevideo.rss",
	"http://rss.cnn.com/services/podcasting/studentnews/rss.xml",
	"http://rss.cnn.com/rss/cnn_latest.rss",
	"http://rss.ireport.com/feeds/oncnn.rss",

	// FOX
	//"http://feeds.foxnews.com/foxnews/latest?format=xml",

	// NY Times
	"http://rss.nytimes.com/services/xml/rss/nyt/World.xml",
	"http://rss.nytimes.com/services/xml/rss/nyt/World.xml",

	// BBC
	"http://feeds.bbci.co.uk/news/rss.xml",
	"http://feeds.bbci.co.uk/news/world/rss.xml",
	"http://feeds.bbci.co.uk/news/uk/rss.xml",
	"http://feeds.bbci.co.uk/news/business/rss.xml",
	"http://feeds.bbci.co.uk/news/politics/rss.xml",
	"http://feeds.bbci.co.uk/news/health/rss.xml",
	"http://feeds.bbci.co.uk/news/education/rss.xml",
	//"http://feeds.bbci.co.uk/news/science_and_environments/rss.xml",
	"http://feeds.bbci.co.uk/news/technology/rss.xml",
	"http://feeds.bbci.co.uk/news/entertainment_and_arts/rss.xml",
	"http://feeds.bbci.co.uk/news/world/africa/rss.xml",
	"http://feeds.bbci.co.uk/news/world/asia/rss.xml",
	"http://feeds.bbci.co.uk/news/world/europe/rss.xml",
	"http://feeds.bbci.co.uk/news/world/latin_america/rss.xml",
	"http://feeds.bbci.co.uk/news/world/middle_east/rss.xml",
	"http://feeds.bbci.co.uk/news/world/us_and_canada/rss.xml",
	"http://feeds.bbci.co.uk/news/england/rss.xml",
	"http://feeds.bbci.co.uk/news/northern_ireland/rss.xml",
	"http://feeds.bbci.co.uk/news/scotland/rss.xml",
	"http://feeds.bbci.co.uk/news/wales/rss.xml",
	"http://feeds.bbci.co.uk/news/system/latest_published_content/rss.xml",
	"http://feeds.bbci.co.uk/news/magazine/rss.xml",
	"http://feeds.bbci.co.uk/news/also_in_the_news/rss.xml",
	"http://feeds.bbci.co.uk/news/special_reports/rss.xml",
	"http://feeds.bbci.co.uk/news/have_your_say/rss.xml",
	//"http://feeds.bbci.co.uk/news/theeditors/rss.xml",

	// UN
	"http://www.un.org/apps/news/rss/rss_top.asp",
	"http://www.un.org/apps/news/rss/rss_mideast.asp",
	"http://www.un.org/apps/news/rss/rss_africa.asp",
	"http://www.un.org/apps/news/rss/rss_europe.asp",
	"http://www.un.org/apps/news/rss/rss_americas.asp",
	"http://www.un.org/apps/news/rss/rss_asiapac.asp",
	"http://www.un.org/apps/news/rss/rss_samoa.asp",
	"http://www.un.org/apps/news/rss/rss_ebola.asp",
	"http://www.un.org/apps/news/rss/rss_health.asp",
	"http://www.un.org/apps/news/rss/rss_unaffairs.asp",
	"http://www.un.org/apps/news/rss/rss_law.asp",
	"http://www.un.org/apps/news/rss/rss_humanrights.asp",
	"http://www.un.org/apps/news/rss/rss_humanitarian.asp",
	"http://www.un.org/apps/news/rss/rss_environment.asp",
	"http://www.un.org/apps/news/rss/rss_edculture.asp",
	"http://www.un.org/apps/news/rss/rss_econdev.asp",
	"http://www.un.org/apps/news/rss/rss_wcp.asp",
	"http://www.un.org/apps/news/rss/rss_peacesecurity.asp",
}

func TestGetFeed(t *testing.T) {
	for _, url := range feeds {
		feed, err := GetFeed(url)
		if err != nil {
			t.Errorf("(%s) %s", url, err.Error())
		} else if feed.Title == "" {
			t.Errorf("Feed (%s) has no title", url)
		}
	}
}
